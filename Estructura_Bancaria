/*
PROGRAMA:

SISTEMA BANCARIO: Este proyecto se basa en el sistema bancario 
para 50 clientes, los cuales tendrán los siguientes tipos de cuentas:              

AMIGO: Dinero máximo que se puede tener en la cuenta es de 15.000.000, 
las transacciones maximas de 5.000.000, cobro de 4 por mil después de la 
3 transaccion, la cuenta no puede quedar en 0, transacciones por mes 15.

EMPRESARIAL: Dinero máximo que se puede tener en la cuenta es de 
150.000.000, las transacciones máximas de 20.000.000, la cuenta no puede
quedar en 0, cobro por transacción de 4.000, transacciones por mes 50.

Solo el gerente del banco podrá visualizar los datos de los clientes, 
y el dinero acumulado del banco.

FECHA: /11/2018

CREADORES: 
Daniel Andres Clavijo Giraldo
Juan Camilo Valenzuela Giraldo
Santiago Quintero Carmona 
Luis Felipe Henao Palacios 
*/

//Librerias
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>

struct registros {
	char nombre[50];
	char correo[50];
	int id;
	double cel;
	char direccion[50];
	int tipo;
	float valor;
	int idcuenta;
	int contrasena[50];	
};

struct cuentas {
	float universidad;
	float hospital;
	float almacen;
	float seguros;
	float software;
	struct registros registro;
} clientes[999999];

void crear (struct cuentas clientes[9999])
{
	int cont = 0; // Este contador es para contar los clientes
	int opc1=0, opc2, opc3, opc4=0; // opc1 = Para guardar la opcion Tipo de cliente, opc2 = Para guardar la opcion de cliente amigo, opc3 = Para guardar la opcion de cliente empresarial, opc4 = Guardar la opcion para el tipo de empresa
	float pago;
	char sn;
	int i1=50, i2=50;
	int pabc = 0;//pocision de memoria de la variable abc
	int opc;
	int nomb;
	char abc[36] ={'a','e','i','o','u','b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9'};
	char dir[100][100] = {"Carrera", "Transversal", "Calle"};
	float capital,valtran=0,vectran[999],ci=0,cpormil;
	int idid2;
	
	while(opc1==0)
	{
		int idid;
		char pass[20];
		intento10:
			system("cls");
		printf("-----------BIENVENIDO AL SISTEMA BANCARIO------------\n\n\n\n");
		
		printf("\nIngrese id de la cuenta\n");	
		scanf("%i",&idid);
		
		fflush(stdin);
		printf("\nIngrese la contraseña de 6 digitos\n");
		gets(pass);
		if(idid==0000 && pass[0]=='b' && pass[1]=='o' && pass[2]=='s' && pass[3]=='s' )
		{
			do
			{
				rebobinar1:
					fflush(stdin);
				system("cls");
				printf("\t\t  CUENTA GERENTE\n");
				printf("\t    Capital del banco: %.2f\n\n", capital);
				printf ("\nSeleccione una opcion del menu gerente\n\n");
				printf ("\t\t\t\tMENU \n");
				printf ("1. Registro cliente \n");
				printf ("2. Mostrar nformacion cliente \n");
				printf ("0. Salir \n");
				scanf("%d",&opc3);
				fflush(stdin);
				if (opc3 >= 0 && opc3 <3)
				{
					switch(opc3)
					{
					case 1:
					{
						printf ("1. Registro cliente \n");
						fflush (stdin);
						system("cls");
						fflush (stdin);
						printf("\t\tREGISTRO DE CLIENTE %i\n", i1+1);
						intent:
							//NOMBRE DEL CLIENTE
							printf("Ingrese nombre del cliente: ");
						gets(clientes[i1].registro.nombre);
						nomb = strlen(clientes[i1].registro.nombre);
						if(nomb < 4)
						{
							printf("Ingrese un nombre que tenga mas de 4 caracteres ");
							printf("\n_________________Presione enter para continuar_");
							getch();
							goto intent;
						}
						intento:
						   system("cls");
						printf("\t\t TIPO CUENTA CLIENTE\n");
						printf("Seleccione el tipo de cuenta para %s\n", clientes[i1].registro.nombre);
						printf("1. Tipo amigo\n");
						printf("2. Tipo empresarial\n");
						printf("3. Informacion de tipo de cuenta\n");
						scanf("%d", &opc);
						fflush (stdin);
						if(opc >= 0 && opc <= 3)
						{
							switch(opc)
							{
							case 1:
							{
								fflush (stdin);
								system("cls");
								printf("\t\tREGISTRO DE CUENTA AMIGO PARA %s\n", clientes[i1].registro.nombre);
								clientes[i1].registro.tipo = 1;
								fflush (stdin);
								
								//ID, DOCUMENTO DE IDENTIDAD, CEDULA DE CIUDADANIA O NUMERO TRIBUTARIO
								intento1:
									printf("\nINGRESE NUMERO DE DOCUMENTO DE IDENTIDAD: ");
								scanf("%i", &clientes[i1].registro.id);
								fflush (stdin);
								if(i2>49)
								{
									for(int x=49;x<i2;x++)
									{
										if(clientes[x].registro.id == clientes[x+1].registro.id)
										{
											printf("ESTE NUMERO YA A SIDO INGRESADO POR OTRO USUARIO\nPOR FAVOR INTENTE DE NUEVO\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento1;
										}
									}
									if(clientes[i1].registro.id<1000001 || clientes[i1].registro.id>2000000000)
									{
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO, INGRESE UN ID MAYOR A 1000000 Y MENOR A 2000000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento1;
									}
								}else
								{
									if(clientes[i1].registro.id<1000001 || clientes[i1].registro.id>2000000000)
									{
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO, INGRESE UN ID MAYOR A 1000000 Y MENOR A 2000000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento1;
									}
								}
								
								//NUMERO DE CELULAR O TELEFONO
								intento2:
								   printf("\nINGRESE NUMERO DE CELULAR O TELEFONO: ");
								scanf("%lf", &clientes[i1].registro.cel);
								fflush(stdin);	
								if(i2>49)
								{
									for(int x=49;x<i2;x++)
									{
										if(clientes[x].registro.cel == clientes[x+1].registro.cel)
										{
											printf("ESTE NUMERO YA A SIDO INGRESADO POR OTRO USUARIO\nPOR FAVOR INTENTE DE NUEVO\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento2;
										}
									}
									if(clientes[i1].registro.cel>3000000 && clientes[i1].registro.cel<3000000000)
									{
										
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO.\n");
										printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento2;
									}else
									{
										if(clientes[i1].registro.cel<2000001)
										{
											system("cls");
											printf("ESTE NUMERO NO TIENE SENTIDO.\n");
											printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento2;
										}else
										{
											if(clientes[i1].registro.cel>3499999999)
											{
												system("cls");
												printf("ESTE NUMERO NO TIENE SENTIDO.\n");
												printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
												printf("\n_________________Presione enter para continuar_");
												getch();
												goto intento2;
											}
										}
									}
								}else
								{
									if(clientes[i1].registro.cel>3000000 && clientes[i1].registro.cel<3000000000)
									{
										
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO.\n");
										printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento2;
									}else
									{
										if(clientes[i1].registro.cel<2000001)
										{
											system("cls");
											printf("ESTE NUMERO NO TIENE SENTIDO.\n");
											printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento2;
										}else
										{
											if(clientes[i1].registro.cel>3499999999)
											{
												system("cls");
												printf("ESTE NUMERO NO TIENE SENTIDO.\n");
												printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
												printf("\n_________________Presione enter para continuar_");
												getch();
												goto intento2;
											}
										}
									}
								}
								
								fflush (stdin);
								
								
								//VALOR CUENTA
								intento3:
									printf("\nINGRESE EL VALOR A DEPOSITAR: ");
								scanf("%f", &clientes[i1].registro.valor);
								fflush (stdin);
								if(clientes[i1].registro.valor<1)
								{
									system("cls");
									printf("ESTE VALOR ES INCORRECTO\n");
									printf("El dinero máximo que se puede tener en la cuenta es de 15.000.000 - La cuenta no puede quedar en 0\n");
									printf("\nINTENTELO DE NUEVO\n");
									printf("\n_________________Presione enter para continuar_");
									getch();
									goto intento3;
								}else
								{
									if(clientes[i1].registro.valor>15000000)
									{
										system("cls");
										printf("ESTE VALOR ES INCORRECTO\n");
										printf("El dinero máximo que se puede tener en la cuenta es de 15.000.000 - La cuenta no puede quedar en 0\n");
										printf("\nINTENTELO DE NUEVO\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento3;
									}
								}
								
								fflush (stdin);
								printf("\nESTOS SON DATOS LOS DE LA CUENTA DE %s DEFINIDOS POR EL SISTEMA", clientes[i1].registro.nombre);
								printf("\n_________________Presione enter para continuar_");
								getch();
								
								//ID DE LA CUENTA 
								clientes[i1].registro.idcuenta = 1000 + rand ()% (9999-1000);
								printf("\n\nID DE CUENTA AMIGO: %i\n", clientes[i1].registro.idcuenta);
								
								//CORREO CLIENTE
								printf("CORREO DEL BANCO PARA EL CLIENTE: ");
								printf("%s@cotecnova.bank.co\n", clientes[i1].registro.nombre);
								
								//CONTRASEÑA
								printf("\nCONTRASEÑA DE CUENTA AMIGO: ");
								for(int l=0;l<6;l++)//For para capturar la cantidad de caracteres de la contraseña
								{
									fflush (stdin);
									pabc = 0 + rand ()% (5 - 0);//Para definir la posicion de memoria de la variable abc
									clientes[i1].registro.contrasena[l] = abc[pabc];//Para definir el caracter que se va a guardar en la contraseña
									printf("%c", clientes[i1].registro.contrasena[l]);//Imprimir el caracter definido
								}
								printf("\n");
								printf("\n_________________Presione enter para continuar_");
								getch();
							}
							break;
							case 2:
							{
								fflush (stdin);
								system("cls");
								printf("\t\tREGISTRO DE CUENTA EMPRESARIAL PARA %s\n", clientes[i1].registro.nombre);
								clientes[i1].registro.tipo = 2;
								fflush (stdin);
								
								//ID, DOCUMENTO DE IDENTIDAD, CEDULA DE CIUDADANIA O NUMERO TRIBUTARIO
								intento4:
									printf("\nINGRESE NUMERO DE DOCUMENTO DE IDENTIDAD: ");
								scanf("%i", &clientes[i1].registro.id);
								fflush (stdin);
								if(i2>49)
								{
									for(int x=49;x<i2;x++)
									{
										if(clientes[x].registro.id == clientes[x+1].registro.id)
										{
											printf("ESTE NUMERO YA A SIDO INGRESADO POR OTRO USUARIO\nPOR FAVOR INTENTE DE NUEVO\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento4;
										}
									}
									if(clientes[i1].registro.id<1000001 || clientes[i1].registro.id>2000000000)
									{
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO, INGRESE UN ID MAYOR A 1000000 Y MENOR A 2000000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento4;
									}
								}else
								{
									if(clientes[i1].registro.id<1000001 || clientes[i1].registro.id>2000000000)
									{
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO, INGRESE UN ID MAYOR A 1000000 Y MENOR A 2000000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento4;
									}
								}
								
								//NUMERO DE CELULAR O TELEFONO
								intento5:
								   printf("\nINGRESE NUMERO DE CELULAR O TELEFONO: ");
								scanf("%lf", &clientes[i1].registro.cel);
								fflush(stdin);	
								if(i2>49)
								{
									for(int x=49;x<i2;x++)
									{
										if(clientes[x].registro.cel == clientes[x+1].registro.cel)
										{
											printf("ESTE NUMERO YA A SIDO INGRESADO POR OTRO USUARIO\nPOR FAVOR INTENTE DE NUEVO\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento5;
										}
									}
									if(clientes[i1].registro.cel>3000000 && clientes[i1].registro.cel<3000000000)
									{
										
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO.\n");
										printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento5;
									}else
									{
										if(clientes[i1].registro.cel<2000001)
										{
											system("cls");
											printf("ESTE NUMERO NO TIENE SENTIDO.\n");
											printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento5;
										}else
										{
											if(clientes[i1].registro.cel>3499999999)
											{
												system("cls");
												printf("ESTE NUMERO NO TIENE SENTIDO.\n");
												printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
												printf("\n_________________Presione enter para continuar_");
												getch();
												goto intento5;
											}
										}
									}
								}else
								{
									if(clientes[i1].registro.cel>3000000 && clientes[i1].registro.cel<3000000000)
									{
										
										system("cls");
										printf("ESTE NUMERO NO TIENE SENTIDO.\n");
										printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento5;
									}else
									{
										if(clientes[i1].registro.cel<2000001)
										{
											system("cls");
											printf("ESTE NUMERO NO TIENE SENTIDO.\n");
											printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
											printf("\n_________________Presione enter para continuar_");
											getch();
											goto intento5;
										}else
										{
											if(clientes[i1].registro.cel>3499999999)
											{
												system("cls");
												printf("ESTE NUMERO NO TIENE SENTIDO.\n");
												printf("SI ES UN NUMERO DE CELULAR INGRESE UN NUMERO MAYOR A 3000000000 O MENOR A 3500000000\n");
												printf("\n_________________Presione enter para continuar_");
												getch();
												goto intento5;
											}
										}
									}
								}
								
								fflush (stdin);
								
								
								//VALOR CUENTA
								intento6:
									printf("\nINGRESE EL VALOR A DEPOSITAR: ");
								scanf("%f", &clientes[i1].registro.valor);
								fflush (stdin);
								if(clientes[i1].registro.valor<1)
								{
									system("cls");
									printf("ESTE VALOR ES INCORRECTO\n");
									printf("El dinero máximo que se puede tener en la cuenta es de 150.000.000 - La cuenta no puede quedar en 0\n");
									printf("\nINTENTELO DE NUEVO\n");
									printf("\n_________________Presione enter para continuar_");
									getch();
									goto intento6;
								}else
								{
									if(clientes[i1].registro.valor>150000000)
									{
										system("cls");
										printf("ESTE VALOR ES INCORRECTO\n");
										printf("El dinero máximo que se puede tener en la cuenta es de 150.000.000 - La cuenta no puede quedar en 0\n");
										printf("\nINTENTELO DE NUEVO\n");
										printf("\n_________________Presione enter para continuar_");
										getch();
										goto intento6;
									}
								}
								
								fflush (stdin);
								printf("\nESTOS SON DATOS DE DE LA CUENTA DE %s DEFINIDOS POR EL SISTEMA", clientes[i1].registro.nombre);
								printf("\n_________________Presione enter para continuar_");
								getch();
								
								//ID DE LA CUENTA 
								clientes[i1].registro.idcuenta = 1000 + rand ()% (9999-1000);
								printf("\n\nID DE CUENTA AMIGO: %i\n", clientes[i1].registro.idcuenta);
								
								//CORREO CLIENTE
								printf("CORREO DEL BANCO PARA EL CLIENTE: ");
								printf("%s@cotecnova.bank.co", clientes[i1].registro.nombre);
								
								//CONTRASEÑA
								printf("\nCONTRASEÑA DE CUENTA EMPRESARIAL: ");
								for(int l=0;l<6;l++)//For para capturar la cantidad de caracteres de la contraseña
								{
									fflush (stdin);
									pabc = 0 + rand ()% (36 - 0);//Para definir la posicion de memoria de la variable abc
									clientes[i1].registro.contrasena[l] = abc[pabc];//Para definir el caracter que se va a guardar en la contraseña
									printf("%c", clientes[i1].registro.contrasena[l]);//Imprimir el caracter definido
								}
								printf("\n");
								printf("\n_________________Presione enter para continuar_");
								getch();
							}
							break;
							case 3:
							{
								fflush (stdin);
								system("cls");
								printf("*************INFORMACION DE CUENTAS************\n");
								printf("CUENTA AMIGO:\n- El dinero máximo que se puede tener en la cuenta es de 15.000.000.\n- Las transacciones maximas de 5.000.000.\n");
								printf("- Cobro de 4 pesos después de la 3 transaccion\n- La cuenta no puede quedar en 0\n- Solo se pueden hacer 15 transacciones por mes.\n");	
								printf("\nCUENTA EMPRESARIAL:\n- El dinero máximo que se puede tener en la cuenta es de 150.000.000.\n- Las transacciones máximas de 20.000.000.\n");
								printf("- La cuenta no puede quedar en 0.\n- Cobro de 4.000 por cada transacción.\n- Solo se pueden hacer 50 transacciones por mes .\n");
								printf("\n_________________Presione enter para continuar_");
								getch();
								goto intento;
							}
							break;
							case 0:
							{
								system("cls");
								printf("FIN DE REGISTRO\n");
								printf("\n_________________Presione enter para continuar_");
								getch();
							}
							break;
							}
						}else
						{
							system("cls");
							printf("Ha seleccionado una opcion incorrecta\n");
							printf("\n_________________Presione enter para continuar_");
							getch();
							goto intento;
						}
						i1++;
						i2 = i1;
						
						getch();
						
					}
					break;
					case 2:
					{
						printf ("\nINFORMACION CLIENTES \n");
						cont=0;
						for (int i=0;i<i2;i++)
						{
							if(i==cont)
							{   
								cont=cont+10;
								printf("\n_________________Presione enter para continuar con la siguiente pagina_");
								getch();
								system("cls");
								printf("\nNo. de cliente %d\n\n",i+1);
								printf("\nNOMBRE DEL CLIENTE : ");
								for(int j=0;j<8;j++)
								{
									printf("%c",clientes[i].registro.nombre[j]);
								}
								printf("\nContraseña: "); 
								for(int sk=0;sk<6;sk++){
									printf("%c",clientes[i].registro.contrasena[sk]);
								}
								
								printf("\nCC: %d \n",clientes[i].registro.id);
								printf("ID DE LA CUENTA: %d\n",clientes[i].registro.idcuenta);
								printf("CORREO: %s@cotecnova.com \n",clientes[i].registro.correo);
								printf("CELULAR: %.00f \n",clientes[i].registro.cel);
								int scc_dir = 0 + rand ()% (3 - 0);
								int i_abc = 28 + rand ()% (36 - 28);
								int dire1 = 1 + rand ()% (99 - 1);
								int dire2 = 1 + rand ()% (99 - 1);
								if(scc_dir==1)
								{
									printf("DIRECCION CLIENTE: %s %c # %i - %i\n",dir[scc_dir], abc[i_abc], dire1, dire2);
								}else
								{
									printf("DIRECCION CLIENTE: %s %i # %i - %i\n",dir[scc_dir], dire1, dire1, dire2);
								}
								printf("TIPO DE CUENTA: ");
								if(clientes[i].registro.tipo==1)
								{
									printf("Cliente amigo\n");
								}else printf("Cliente empresarial\n");
								printf("DINERO EN LA CUENTA: %.2lf\n",clientes[i].registro.valor);
							}else
							{
								printf("\nNo. de cliente %d\n\n",i+1);
								printf("\nNOMBRE DEL CLIENTE : ");
								for(int j=0;j<8;j++)
								{
									printf("%c",clientes[i].registro.nombre[j]);
								}
								printf("\nContraseña: ");
								for(int l=0;l<6;l++)
								{
									fflush (stdin);
									printf("%c", clientes[i].registro.contrasena[l]);
								}
								printf("\n");
								printf("CC: %d \n",clientes[i].registro.id);
								printf("ID DE LA CUENTA: %d\n",clientes[i].registro.idcuenta);
								printf("CORREO: %s@cotecnova.com \n",clientes[i].registro.correo);
								printf("CELULAR: %.00f \n",clientes[i].registro.cel);
								int scc_dir = 0 + rand ()% (3 - 0);
								int i_abc = 28 + rand ()% (36 - 28);
								int dire1 = 1 + rand ()% (99 - 1);
								int dire2 = 1 + rand ()% (99 - 1);
								if(scc_dir==1)
								{
									printf("DIRECCION CLIENTE: %s %c # %i - %i\n",dir[scc_dir], abc[i_abc], dire1, dire2);
								}else
								{
									printf("DIRECCION CLIENTE: %s %i # %i - %i\n",dir[scc_dir], dire1, dire1, dire2);
								}
								printf("TIPO DE CUENTA: ");
								if(clientes[i].registro.tipo==1)
								{
									printf("Cliente amigo\n");
								}else printf("Cliente empresarial\n");
								printf("DINERO EN LA CUENTA: %.2lf\n",clientes[i].registro.valor);
							}
							
						}
						fflush(stdin);
						printf("\n_________________Presione enter para continuar_");
						getch();
						fflush (stdin);
					}
					break; 
					case 0:
					{
						fflush(stdin);
						printf("\n_________________Presione enter para continuar_");
						getch();
						fflush (stdin);
					}
					break;
					}
					
				}else // Condicion por si el usuario ha ingresado una opcion incorrecta, esto PUBLICIDAD porque no funcionó la opcion del menu
				{
					fflush(stdin);
					printf("\n -------------- Ha ingresado una opcion incorrecta ---------------- \n");
					printf("\n ----------------- Por favor, intentelo de nuevo ------------------- \n \n");
					printf("\n_________________Presione enter para continuar_");
					getch();
					fflush (stdin);
					goto rebobinar1;
				}
			}while(opc3!=0);
		}else{
			int ci2=0;
			for(int i=0;i<i2;i++){
				if(idid==clientes[i].registro.idcuenta )
				{
					if (pass[0]==clientes[i].registro.contrasena[0] && pass[1]==clientes[i].registro.contrasena[1] && pass[2]==clientes[i].registro.contrasena[2] && pass[3]==clientes[i].registro.contrasena[3] && pass[4]==clientes[i].registro.contrasena[4] && pass[5]==clientes[i].registro.contrasena[5])
					{   intento11:
						ci2=9;
					system("cls");
					printf ("\t\t\t SISTEMA BANCARIO COTECNOVA\n");
					if(clientes[i].registro.tipo==1)
					{	
						printf ("\t\t\t CLIENTE AMIGO id#: %i \n\n",clientes[i].registro.idcuenta);
					}else
					{
						printf ("\t\t\t CUENTA EMPRESARIAL id#: %i \n\n",clientes[i].registro.idcuenta);
					}
					printf("\t\t\t Nombre: %s\n", clientes[i].registro.nombre);
					printf ("\nQue tipo de transaccion desea realizar? \n\n");
					printf ("\t\t\t\tMENU \n");
					printf ("1. Transferencia de dinero \n");
					printf ("2. Retiros de fondos \n");
					printf ("3. Pagos \n");
					printf ("0. Salir \n");
					scanf ("%i", & opc2);
					if (opc2 >= 0 && opc2 <4)
					{
						switch(opc2)
						{
						case 1:
						{
							system("cls");
							printf("Ha seleccionado la opcion 1 \nTransferencia de dinero \n");
							ci=0;
							idid2=0;
							fflush(stdin);
							cpormil=0;
							printf("\n\nIngrese valor de la transacción: ");
							scanf("%f",&valtran);
							printf("\n\nIngrese id de cuenta a la cual se le hara la transacción: ");
							scanf("%d",&idid2);
							for(int j=0;j<i2;j++)
							{
								if(idid2==clientes[j].registro.idcuenta)
								{
									ci=1;
									if(clientes[i].registro.tipo==1)
									{
										cpormil = valtran*0.004;
										if(vectran[i]>15)
										{
											printf("limite de transacciones alcanzado por este mes");
										}else
										{
											if(valtran>5000000)
											{
												printf("No se puede hacer una transaccion mayor a 5 millones");
											}else 
											{
												if(((clientes[i].registro.valor-cpormil)-valtran)<=0)
												{
													printf("No se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
												}else                           
												{
													if(clientes[j].registro.tipo==1)
													{ 
														if((clientes[j].registro.valor+valtran)>15000000)
														{
															printf("No se puede realizar la transaccion ya que la cuenta a destino excederia el limite el limite de dinero");
														}else
														{
															if(vectran[i]>=3)
															{
																clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-valtran;
																clientes[j].registro.valor=clientes[j].registro.valor+valtran;
																capital = capital+cpormil;
																vectran[i]=vectran[i]+1;
																printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
															}else
															{
																clientes[i].registro.valor=clientes[i].registro.valor-valtran; 
																clientes[j].registro.valor=clientes[j].registro.valor+valtran;
																vectran[i]=vectran[i]+1;
																printf("\n Transaccion realizada con exito Saldo actual: %.2f",clientes[i].registro.valor);
																
															}
														}
													}
													else{
														if((clientes[j].registro.valor+valtran)>150000000)
														{
															printf("No se puede realizar la transaccion ya que la cuenta a destino excederia el limite el limite de dinero");
														}else
														{
															if(vectran[i]>=3)
															{
																clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-valtran;
																clientes[j].registro.valor=clientes[j].registro.valor+valtran;
																capital = capital+cpormil;
																vectran[i]=vectran[i]+1;
																printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
															}else
															{
																clientes[i].registro.valor=clientes[i].registro.valor-valtran; 
																clientes[j].registro.valor=clientes[j].registro.valor+valtran;
																vectran[i]=vectran[i]+1;
																printf("\n Transaccion realizada con exito Saldo actual: %.2f",clientes[i].registro.valor);
																
															}
														}
													}
												}
											}
										}	
									}else
									{
										if(vectran[i]>50)
										{
											printf("\nLimite de transacciones alcanzado por este mes\n");
										}else  
										{
											if(valtran>20000000)
											{
												printf("No se puede hacer una transaccion mayor a 20 millones");
											}else
											{
												
												if(((clientes[i].registro.valor-4000)-valtran)<=0)
												{
													printf("No se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
												}else
												{
													if(clientes[j].registro.tipo==1)
													{
														if((clientes[j].registro.valor+valtran)>15000000)
														{
															printf("No se puede realizar la transaccion ya que la cuenta a destino excederia el limite el limite de dinero");
														}else
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-4000)-valtran;
															capital = capital+4000;
															clientes[j].registro.valor=clientes[j].registro.valor+valtran;
															vectran[i]=vectran[i]+1;
															printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
														}
													}else{
														if((clientes[j].registro.valor+valtran)>150000000)
														{
															printf("No se puede realizar la transaccion ya que la cuenta a destino excederia el limite el limite de dinero");
														}else
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-4000)-valtran;
															capital = capital+4000;
															clientes[j].registro.valor=clientes[j].registro.valor+valtran;
															vectran[i]=vectran[i]+1;
															printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
														}
													}
												}
												
											}
										}
									}	
								}
								
							}
							if (ci==0)
							{
								printf("\nEl Numero id que ingreso no corresponde a ninguna cuenta, desea ingresar otro id ?, si [s], no [n]: ");
							}else
							{
								printf("\nDesea hacer otra transaccion ?, si [s], no [n]: ");
							}
							fflush(stdin);
							gets(&sn);
							if(sn=='s')
							{
								goto intento11;
							}	
							
							
						}
						
						break;
						case 2:
						{int bc=1;
						system("cls");
						printf("Ha seleccionado la opcion 2 \nRetiro de fondos \n");
						printf("\n1.Cajero\n2.Banco\n");
						scanf("%d",&bc);
						
						switch(bc){
						case 1:
						{ system("cls");
						printf("Ha seleccionado la opcion de cajero para el retiro de fondos\n \n");
						int valtran=valtran;
						ci=0;
						cpormil=0;
						printf("\nRecuerde que en un cajero solo se pueden ingresar valores de 10000 en 10000 hasta 700.000 \nIngrese valor a retirar : ");
						scanf("%d",&valtran);
						if(valtran%10000==0 && valtran<700000){
							if(clientes[i].registro.tipo==1)
							{
								cpormil=valtran*0.004;
								if(vectran[i]>15)
								{
									printf("\nlimite de transacciones alcanzado por este mes");
								}
								else
								{
									if(valtran>5000000)
									{
										printf("\nNo se puede hacer una transaccion mayor a 5 millones");
									}else
									{
										if(((clientes[i].registro.valor-cpormil)-valtran)<=0)
										{
											printf("\nNo se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
										}else
										{
											if(vectran[i]>=3)
											{
												clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-valtran;
												capital = capital+cpormil;
												vectran[i]=vectran[i]+1;
												printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
											}else
											{
												clientes[i].registro.valor=clientes[i].registro.valor-valtran; 	
												vectran[i]=vectran[i]+1;
												printf("\n Transaccion realizada con exito Saldo actual: %.2f",clientes[i].registro.valor);
											}
										}
									}
								}
							}else
							{
								if(vectran[i]>50)
								{
									printf("\nLimite de transacciones alcanzado por este mes\n");
								}else  
								{
									if(valtran>20000000)
									{
										printf("\nNo se puede hacer una transaccion mayor a 20 millones");
									}else
									{
										if(((clientes[i].registro.valor-4000)-valtran)<=0)
										{
											printf("No se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
										}else
										{
											clientes[i].registro.valor=(clientes[i].registro.valor-4000)-valtran;
											capital = capital+4000;	
											vectran[i]=vectran[i]+1;
											printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
										}
									}
								}
							}
						}else{
							printf("valor no soportado porfavor ingrese uno de los valores indicados");
						}
						
						printf("\nDesea hacer otra transaccion ?, si [s], no [n]: ");
						fflush(stdin);
						gets(&sn);
						if(sn=='s')
						{
							goto intento11;
						}
						
						
						}	
						break;	
						case 2:{
							ci=0;
							cpormil=0;
							printf("\nIngrese valor a retirar: ");
							scanf("%f",&valtran);
							if(clientes[i].registro.tipo==1)
							{
								cpormil=valtran*0.004;
								if(vectran[i]>15)
								{
									printf("\nlimite de transacciones alcanzado por este mes");
								}
								else
								{
									if(valtran>5000000)
									{
										printf("\nNo se puede hacer una transaccion mayor a 5 millones");
									}else
									{
										if(((clientes[i].registro.valor-cpormil)-valtran)<=0)
										{
											printf("\nNo se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
										}else
										{
											if(vectran[i]>=3)
											{
												clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-valtran;
												capital = capital+cpormil;
												vectran[i]=vectran[i]+1;
												printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
											}else
											{
												clientes[i].registro.valor=clientes[i].registro.valor-valtran; 	
												vectran[i]=vectran[i]+1;
												printf("\n Transaccion realizada con exito Saldo actual: %.2f",clientes[i].registro.valor);
											}
										}
									}
								}
							}else
							{
								if(vectran[i]>50)
								{
									printf("\nLimite de transacciones alcanzado por este mes\n");
								}else  
								{
									if(valtran>20000000)
									{
										printf("\nNo se puede hacer una transaccion mayor a 20 millones");
									}else
									{
										if(((clientes[i].registro.valor-4000)-valtran)<=0)
										{
											printf("No se puede realizar la transaccion ya que su cuenta quedaria en ceros o numero negativo");
										}else
										{
											clientes[i].registro.valor=(clientes[i].registro.valor-4000)-valtran;
											capital = capital+4000;	
											vectran[i]=vectran[i]+1;
											printf("\n Transaccion realizada con exito. Saldo actual: %.2f",clientes[i].registro.valor);
										}
									}
								}
							}
							
							printf("\nDesea hacer otra transaccion ?, si [s], no [n]: ");
							fflush(stdin);
							gets(&sn);
							if(sn=='s')
							{
								goto intento11;
							}
							
							
						}
							break;	
						default:
							printf("Porfavor seleccione una de las opciones indicadas");
							break;
						}
						
						}
						break;
						case 3:
						{
							system("cls");
							printf("Ha seleccionado la opcion 3 \nPagos \n");
							intento33:
							printf("Lista de empresas afiliadas al banco\n");
							printf("Por favor ingrese la empresa a la que desea hacer el pago\n");
							printf("1. Universidad cotecnova\n");
							printf("2. Hospital cotecnova\n");
							printf("3. Almacen cotecnova\n");
							printf("4. Seguros cotecnova\n");
							printf("5. Cotecnova Software\n");
							scanf("%d", &opc4);
							if (opc4 > 0 && opc4 <6)
							{
								switch(opc4)
								{
								case 1:
								{
									printf("opcion 1: Universidad cotecnova\n");
									printf("Ingrese valor de pago: ");
									scanf("%f", &pago);
									for(int j=0;j<i2;j++)
									{											
										if(clientes[i].registro.tipo==1)
										{
											ci=1;
											cpormil = pago*0.004;
											if(vectran[i]>15)
											{
												printf("limite de pagos alcanzado por este mes");
											}else
											{
												if(pago>5000000)
												{
													printf("No se puede hacer un pago mayor a 5 millones");
												}else 
												{
													if(((clientes[i].registro.valor-cpormil)-pago)<=0)
													{
														printf("No se puede realizar el pagoya que su cuenta quedaria en ceros o numero negativo");
													}else
													{
														if(vectran[i]>=3)
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-pago;
															clientes[j].universidad=clientes[j].registro.valor+pago;
															capital = capital+cpormil;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito. Saldo actual: %.2f",clientes[i].universidad);
														}else
														{
															clientes[i].universidad=clientes[i].registro.valor-pago; 
															clientes[j].universidad=clientes[j].registro.valor+pago;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito Saldo actual: %.2f",clientes[i].universidad);
														}
													}															
												}
											}
										}else
										{
											if(vectran[i]>50)
											{
												printf("\nLimite de transacciones alcanzado por este mes\n");
											}else  
											{
												if(pago>20000000)
												{
													printf("No se puede hacer un pago mayor a 20 millones");
												}else
												{
													if(((clientes[i].registro.valor-4000)-pago)<=0)
													{
														printf("No se puede realizar el pago ya que su cuenta quedaria en ceros o numero negativo\n");
													}else
													{
														clientes[i].universidad=(clientes[i].registro.valor-4000)-pago;
														capital = capital+4000;
														clientes[j].universidad=clientes[j].registro.valor+pago;
														vectran[i]=vectran[i]+1;
														printf("\nPago realizado con exito. Saldo actual: %.2f\n",clientes[i].universidad);
													}
												}
											}
										}
									}
								}
								break;
								case 2:
								{
									printf("opcion 2: Hospital cotecnova\n");
									printf("Ingrese valor de pago: ");
									scanf("%f", &pago);
									for(int j=0;j<i2;j++)
									{											
										if(clientes[i].registro.tipo==1)
										{
											ci=1;
											cpormil = pago*0.004;
											if(vectran[i]>15)
											{
												printf("limite de pagos alcanzado por este mes");
											}else
											{
												if(pago>5000000)
												{
													printf("No se puede hacer un pago mayor a 5 millones");
												}else 
												{
													if(((clientes[i].registro.valor-cpormil)-pago)<=0)
													{
														printf("No se puede realizar el pagoya que su cuenta quedaria en ceros o numero negativo");
													}else
													{
														if(vectran[i]>=3)
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-pago;
															clientes[j].hospital=clientes[j].registro.valor+pago;
															capital = capital+cpormil;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito. Saldo actual: %.2f",clientes[i].hospital);
														}else
														{
															clientes[i].hospital=clientes[i].registro.valor-pago; 
															clientes[j].hospital=clientes[j].registro.valor+pago;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito Saldo actual: %.2f",clientes[i].hospital);
														}
													}															
												}
											}
										}else
										{
											if(vectran[i]>50)
											{
												printf("\nLimite de transacciones alcanzado por este mes\n");
											}else  
											{
												if(pago>20000000)
												{
													printf("No se puede hacer un pago mayor a 20 millones");
												}else
												{
													if(((clientes[i].registro.valor-4000)-pago)<=0)
													{
														printf("No se puede realizar el pago ya que su cuenta quedaria en ceros o numero negativo\n");
													}else
													{
														clientes[i].hospital=(clientes[i].registro.valor-4000)-pago;
														capital = capital+4000;
														clientes[j].hospital=clientes[j].registro.valor+pago;
														vectran[i]=vectran[i]+1;
														printf("\nPago realizado con exito. Saldo actual: %.2f\n",clientes[i].hospital);
													}
												}
											}
										}
									}
								}
								break;
								case 3:
								{
									printf("opcion 3: almacen cotecnova\n");
									printf("Ingrese valor de pago: ");
									scanf("%f", &pago);
									for(int j=0;j<i2;j++)
									{											
										if(clientes[i].registro.tipo==1)
										{
											ci=1;
											cpormil = pago*0.004;
											if(vectran[i]>15)
											{
												printf("limite de pagos alcanzado por este mes");
											}else
											{
												if(pago>5000000)
												{
													printf("No se puede hacer un pago mayor a 5 millones");
												}else 
												{
													if(((clientes[i].registro.valor-cpormil)-pago)<=0)
													{
														printf("No se puede realizar el pagoya que su cuenta quedaria en ceros o numero negativo");
													}else
													{
														if(vectran[i]>=3)
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-pago;
															clientes[j].almacen=clientes[j].registro.valor+pago;
															capital = capital+cpormil;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito. Saldo actual: %.2f",clientes[i].almacen);
														}else
														{
															clientes[i].almacen=clientes[i].registro.valor-pago; 
															clientes[j].almacen=clientes[j].registro.valor+pago;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito Saldo actual: %.2f",clientes[i].almacen);
														}
													}															
												}
											}
										}else
										{
											if(vectran[i]>50)
											{
												printf("\nLimite de transacciones alcanzado por este mes\n");
											}else  
											{
												if(pago>20000000)
												{
													printf("No se puede hacer un pago mayor a 20 millones");
												}else
												{
													if(((clientes[i].registro.valor-4000)-pago)<=0)
													{
														printf("No se puede realizar el pago ya que su cuenta quedaria en ceros o numero negativo\n");
													}else
													{
														clientes[i].almacen=(clientes[i].registro.valor-4000)-pago;
														capital = capital+4000;
														clientes[j].almacen=clientes[j].registro.valor+pago;
														vectran[i]=vectran[i]+1;
														printf("\nPago realizado con exito. Saldo actual: %.2f\n",clientes[i].almacen);
													}
												}
											}
										}
									}
								}
								break;
								case 4:
								{
									printf("opcion 4: seguros cotecnova\n");
									printf("Ingrese valor de pago: ");
									scanf("%f", &pago);
									for(int j=0;j<i2;j++)
									{											
										if(clientes[i].registro.tipo==1)
										{
											ci=1;
											cpormil = pago*0.004;
											if(vectran[i]>15)
											{
												printf("limite de pagos alcanzado por este mes");
											}else
											{
												if(pago>5000000)
												{
													printf("No se puede hacer un pago mayor a 5 millones");
												}else 
												{
													if(((clientes[i].registro.valor-cpormil)-pago)<=0)
													{
														printf("No se puede realizar el pagoya que su cuenta quedaria en ceros o numero negativo");
													}else
													{
														if(vectran[i]>=3)
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-pago;
															clientes[j].seguros=clientes[j].registro.valor+pago;
															capital = capital+cpormil;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito. Saldo actual: %.2f",clientes[i].seguros);
														}else
														{
															clientes[i].seguros=clientes[i].registro.valor-pago; 
															clientes[j].seguros=clientes[j].registro.valor+pago;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito Saldo actual: %.2f",clientes[i].seguros);
														}
													}															
												}
											}
										}else
										{
											if(vectran[i]>50)
											{
												printf("\nLimite de transacciones alcanzado por este mes\n");
											}else  
											{
												if(pago>20000000)
												{
													printf("No se puede hacer un pago mayor a 20 millones");
												}else
												{
													if(((clientes[i].registro.valor-4000)-pago)<=0)
													{
														printf("No se puede realizar el pago ya que su cuenta quedaria en ceros o numero negativo\n");
													}else
													{
														clientes[i].seguros=(clientes[i].registro.valor-4000)-pago;
														capital = capital+4000;
														clientes[j].seguros=clientes[j].registro.valor+pago;
														vectran[i]=vectran[i]+1;
														printf("\nPago realizado con exito. Saldo actual: %.2f\n",clientes[i].seguros);
													}
												}
											}
										}
									}
								}
								break;
								case 5:
								{
									printf("opcion 5: cotecnova software\n");
									printf("Ingrese valor de pago: ");
									scanf("%f", &pago);
									for(int j=0;j<i2;j++)
									{											
										if(clientes[i].registro.tipo==1)
										{
											ci=1;
											cpormil = pago*0.004;
											if(vectran[i]>15)
											{
												printf("limite de pagos alcanzado por este mes");
											}else
											{
												if(pago>5000000)
												{
													printf("No se puede hacer un pago mayor a 5 millones");
												}else 
												{
													if(((clientes[i].registro.valor-cpormil)-pago)<=0)
													{
														printf("No se puede realizar el pagoya que su cuenta quedaria en ceros o numero negativo");
													}else
													{
														if(vectran[i]>=3)
														{
															clientes[i].registro.valor=(clientes[i].registro.valor-cpormil)-pago;
															clientes[j].software=clientes[j].registro.valor+pago;
															capital = capital+cpormil;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito. Saldo actual: %.2f",clientes[i].software);
														}else
														{
															clientes[i].software=clientes[i].registro.valor-pago; 
															clientes[j].software=clientes[j].registro.valor+pago;
															vectran[i]=vectran[i]+1;
															printf("\n Pago realizado con exito Saldo actual: %.2f",clientes[i].software);
														}
													}															
												}
											}
										}else
										{
											if(vectran[i]>50)
											{
												printf("\nLimite de transacciones alcanzado por este mes\n");
											}else  
											{
												if(pago>20000000)
												{
													printf("No se puede hacer un pago mayor a 20 millones");
												}else
												{
													if(((clientes[i].registro.valor-4000)-pago)<=0)
													{
														printf("No se puede realizar el pago ya que su cuenta quedaria en ceros o numero negativo\n");
													}else
													{
														clientes[i].software=(clientes[i].registro.valor-4000)-pago;
														capital = capital+4000;
														clientes[j].software=clientes[j].registro.valor+pago;
														vectran[i]=vectran[i]+1;
														printf("\nPago realizado con exito. Saldo actual: %.2f\n",clientes[i].software);
													}
												}
											}
										}
									}
								}
								break;
								}
							}else
							{
								system("cls");
								printf("Ha seleccionado una opcion incorrecta\n");
								printf("\n_________________Presione enter para continuar_");
								getch();
								goto intento33;
							}
							printf("\nDesea hacer otra transaccion ?, si [s], no [n]: ");
							fflush(stdin);
							gets(&sn);
							if(sn=='s')
							{
								goto intento11;
							}	
							
						}
						break;
						case 4:
						{
							system("cls");
							printf("Ha seleccionado la opcion 4 \nRetiros de fondos \n");
							printf("\n_________________Presione enter para continuar_");
							getch();
						}
						break;
						case 5:
						{
							system("cls");
							printf("Ha seleccionado la opcion 5 \nCambios de cheques \n");
							printf("\n_________________Presione enter para continuar_");
							getch();
						}
						break;
						case 6:
						{
							system("cls");
							printf("Aun no hay utilidad para esta opcion \n");
							printf("\n_________________Presione enter para continuar_");
							getch();
						}
						break;
						case 7:
						{
							system("cls");
							printf("Aun no hay utilidad para esta opcion \n");
							printf("\n_________________Presione enter para continuar_");
							getch();
						}
						break;
						case 8:
						{
							system("cls");
							printf("Aun no hay utilidad para esta opcion \n");
							printf("\n_________________Presione enter para continuar_");
							getch();
						}
						break;
						case 0:
						{
							system("cls");
							printf("Salir de la cuenta \n");
							printf("\n_________________Presione enter para continuar_");
							
							getch();
							
						}
						break;
						}
					} else // Condicion por si el usuario ha ingresado una opcion incorrecta, esto PUBLICIDAD porque no funcionó la opcion del menu
					{
						printf("\n -------------- Ha ingresado una opcion incorrecta ---------------- \n");
						printf("\n ----------------- Por favor, intentelo de nuevo ------------------- \n \n");
						printf("\n_________________Presione enter para continuar_");
						getch();
						fflush (stdin);
						goto intento2;
					}
					}else{
						ci2=2;
					}
				}
				
			}
			
			if(ci2==0){
				printf("Id Incorrecta ");
				printf("\n_________________Presione enter para continuar_");
				getch();
				goto intento10;
			}else if(ci2==2){
				printf("Contraseña Incorrecta ");
				printf("\n_________________Presione enter para continuar_");
				getch();
				goto intento10;
			}
			printf("\nDesea abrir seccion con otra cuenta s/n: ");
			char op7;
			scanf("%c",&op7);
			if(op7=='n'){opc1=2;}
			
		}
		
		
	}
	
	
}
int main ()
{
	
	system("color 0b");
	fflush(stdin);
	char abc[36] ={'a','e','i','o','u','b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9'};
	
	int v, c;//v = vocal, c = consonante
	int cn=0, hp=0;//cn = la cantidad de nombres que va tener el usuario
	
	float cc=0, cc3=0;//cc = cantidad de caracterres del nombre, cc2 = cantidad de caracterres de la contraseña, cc3 = cantidad de caracterres del correo
	int pabc = 0;//pocision de memoria de la variable abc
	int co=0;//co = contador para guardar los caracteres del nombre de usuario y la contraseña
	srand(time(NULL));
	
	//DECLARACION DE DATOS CLIENTES
	for(int i = 0; i <50; i ++)//Este for es para generar los datos de los 50 clientes
	{
		clientes[i].registro.id = 1000000 + rand ()% (1007000001 - 1000000);//Este va a ser el numero del documento de identidad
		clientes[i].registro.cel = 3011000000 + rand ()% (3399999999 - 3011000000);//Este va a ser par ael telefono del cliente
		clientes[i].registro.tipo = 1 + rand ()% (3 - 1);
		if(clientes[i].registro.tipo==1)
		{	
			clientes[i].registro.valor = 1 + rand ()% (15000001-1);
		}else{
			clientes[i].registro.valor = 1 + rand ()% (150000001-1);
		}
		clientes[i].registro.idcuenta = 1000 + rand ()% (9999-1000);
		fflush (stdin);
	}
	
	//IMPRESION DE DATOS CLIENTES
	for(int i = 0; i <50; i ++)//Este for es para imprimir los datos de los 50 usuarios
	{
		
		co=0;
		hp=0;
		fflush (stdin);
		//printf("\n\nUsuario aleatorio %i\n\n", i+1);
		
		//TIPO DE CUENTA
		//printf("TIPO DE CUENTA DEL CLIENTE: ");
		if(clientes[i].registro.tipo==1)
		{	
			//	printf("Cuenta amigo\n");
		}else
		{
			//printf("Cuenta empresarial\n");
		}
		
		//ID DE CUENTA CLIENTE
		//printf("ID DE CUENTA CLIENTE: ");
		//printf ("%i \n", clientes[i].registro.idcuenta);
		
		//NOMBRE DE CLIENTE
		//printf("NOMBRE DEL CLIENTE: ");
		cn = 2 + rand ()% (5-2);
		cn = cn;
		for(int h=0;h<cn;h++)
		{
			fflush (stdin);
			cc = 6 + rand ()% (9 - 6);//Calcula la cantidad de caracteres para el nombre
			cc = cc/2;//Se divide la cantidad de caracteres del nombre porque en el for se van a ir tomando de a dos caracteres
			for(int k=0;k<cc;k++)
			{
				fflush (stdin);
				
				c = 5 + rand ()% (26 - 5);//c = consonantes que va a tener el nombre
				clientes[i].registro.nombre[co] = abc[c];//Aca se define la pocicion c como la posicion c de la variable abc
				//printf("%c", clientes[i].registro.nombre);
				v = 0 + rand ()% (5 - 0);
				clientes[i].registro.nombre[co+1] = abc[v];
				//printf("%c", clientes[i].registro.nombre);
				co+=2;
			}
			for(int p=0;p<cc*2;p++)//cc se multiplica por 2 porque dentro del for se va a imprimir un solo caracer
			{
				fflush (stdin);
				//printf("%c", clientes[i].registro.nombre[hp]);
				hp+=1;
			}
			//printf(" ");
		}
		
		//printf("\n");
		
		//ID, NUMERO DE IDENTIFICACION O CEDULA DE CIUDADANIA DEL CLIENTE
		//printf ("CC: %i \n", clientes[i].registro.id);
		
		//NUMERO DE CELULAR DEL CLIENTE
		//printf ("CEL: %.0lf \n", clientes[i].registro.cel);
		
		
		//VALOR QUE VA A TENER LA CUENTA
		//printf("CANTIDAD DE DINERO DEL CLIENTE: %.2f \n", clientes[i].registro.valor);
		
		//CONTRASEÑA DE CUENTA CLIENTE
		//printf("CONTRASEÑA DE CUENTA CLIENTE: ");
		fflush (stdin);
		for(int l=0;l<6;l++)//For para capturar la cantidad de caracteres de la contraseña
		{
			fflush (stdin);
			pabc = 0 + rand ()% (5 - 0);//Para definir la posicion de memoria de la variable abc
			clientes[i].registro.contrasena[l] = abc[pabc];//Para definir el caracter que se va a guardar en la contraseña
			//printf("%c", clientes[i].registro.contrasena[l]);//Imprimir el caracter definido
		}
		//printf("\n");
		
		//CORREO CLIENTE
		//printf("CORREO DEL CLIENTE: ");
		cc3 = 4 + rand ()% (6 - 4);//Calcula la cantidad de caracteres para el correo
		for (int m=0;m<cc3;m++)
		{
			clientes[i].registro.correo[m]=clientes[i].registro.nombre[m];
			//printf("%c",clientes[i].registro.correo[m]);
		}
		//printf("@cotecnova.com\n");
		
		
	}
	fflush(stdin);
	crear (clientes);
	
}
